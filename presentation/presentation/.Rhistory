install.packages("class")
library(class)
Data <- read.csv("./letter-recognition.data",sep=",",header=FALSE)
#Class Frequency Distribution
y <- Data[,1]
barplot(table(y),xlab="Class",col="purple",main="ClassFrequcy Distribution")
library(corrplot)
library(caret)
x <- Data[,-1]
#Correlations between predictors.
correlations <-cor(x)
corrplot(correlations, order = "hclust")
x<-x[,-findCorrelation(correlations,cutoff=0.75)]
nearZeroVar(x)
smp_size <- floor(0.75 * nrow(x))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(x)), size = smp_size)
trainX <- x[train_ind, ]
trainY <- y[train_ind]
testX <-  x[-train_ind, ]
testY<-y[-train_ind]
setwd("C:/Users/Administrator/Google Drive/course work/Predictive Modeling/presentation/presentation")
Data <- read.csv("./letter-recognition.data",sep=",",header=FALSE)
#Class Frequency Distribution
y <- Data[,1]
barplot(table(y),xlab="Class",col="purple",main="ClassFrequcy Distribution")
library(corrplot)
library(caret)
x <- Data[,-1]
#Correlations between predictors.
correlations <-cor(x)
corrplot(correlations, order = "hclust")
x<-x[,-findCorrelation(correlations,cutoff=0.75)]
nearZeroVar(x)
smp_size <- floor(0.75 * nrow(x))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(x)), size = smp_size)
trainX <- x[train_ind, ]
trainY <- y[train_ind]
testX <-  x[-train_ind, ]
testY<-y[-train_ind]
knnfit<- train(x = trainX,y = trainY,method = "knn",metric = "Kappa",preProc = c("center", "scale"),tuneGrid = data.frame(.k = c(3,5,7,9,11)))
library(class)
myknn<-knn(trainX,testX,as.factor(trainY), k = 3, l = 0, prob = FALSE, use.all = TRUE)
confusionMatrix(myknn,testY)
knnfit
myknn<-knn.cv(x, y, k = 3, l = 0, prob = FALSE, use.all = TRUE)
confusionMatrix(myknn, y)
myknn
